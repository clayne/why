#meta
name: "varargs_simple.c"

#data
.str.2: "%s\x00"
.str.1: "%c\x00"
.str.3: "bar\x00"
.str: "%lu\x00"

#code

:: main
<halt>

sub main() {
	@__main_label2
	[ $rt
	[ $fp
	[ $t0
	[ $t1
	[ $t2
	[ $t3
	[ $t4
	[ $t5
	[ $t6
	$sp -> $fp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t0
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t1
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerMemory: %0 -> [%3]
	$a0 -> [$t0] /h
	// LowerMemory: %1 -> [%4]
	$a1 -> [$t1]
	10 -> $t2
	[:4 $t2
	-1 -> $t3
	[:4 $t3
	3 -> $t4
	[:4 $t4
	&.str.3 -> $t5
	[:8 $t5
	4 -> $t6
	[:4 $t6
	:: foo
	] $a1
	] $a0
	$fp -> $sp
	0 -> $r0
	] $t6
	] $t5
	] $t4
	] $t3
	] $t2
	] $t1
	] $t0
	] $fp
	] $rt
	: $rt
}

sub foo() {
	@__foo_label1
	$sp -> $m2
	[ $rt
	[ $fp
	[ $t0
	[ $t1
	[ $t2
	[ $t3
	[ $t4
	[ $t5
	[ $t6
	[ $t7
	[ $t8
	[ $t9
	[ $ta
	[ $tb
	[ $tc
	[ $td
	[ $te
	[ $tf
	[ $t10
	[ $t11
	[ $t12
	[ $t13
	[ $t14
	[ $t15
	[ $t16
	[ $s0
	[ $s1
	[ $s2
	[ $s3
	[ $s4
	[ $s5
	$sp -> $fp
	// LoadArguments: $sp + to_skip -> %temp
	// Increased by 248 bytes
	$sp + 248 -> $m0
	// LoadArguments: [%temp] -> %var
	[$m0] -> $t0 /h
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t1
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t2
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t3
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t4
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t5
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t6
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerMemory: %0 -> [%2]
	$t0 -> [$t1] /h
	$t2 -> $t7
	// llvm.va_start removed.
	$m2 -> [$t7]
	// LowerMemory(load): [%3] -> %9
	[$t2] -> $t8
	// LowerGetelementptr: struct-type
	$t8 + 4 -> $t9
	// LowerMemory: %10 -> [%3]
	$t9 -> [$t2]
	$t8 -> $ta
	// LowerMemory(load): [%11] -> %12
	[$ta] -> $tb
	// LowerMemory: %12 -> [%4]
	$tb -> [$t3]
	// LowerMemory(load): [%3] -> %13
	[$t2] -> $tc
	// LowerGetelementptr: struct-type
	$tc + 4 -> $td
	// LowerMemory: %14 -> [%3]
	$td -> [$t2]
	$tc -> $te
	// LowerMemory(load): [%15] -> %16
	[$te] -> $tf /h
	// LowerMemory: %16 -> [%5]
	$tf -> [$t4] /h
	// LowerMemory(load): [%3] -> %17
	[$t2] -> $t10
	// LowerGetelementptr: struct-type
	$t10 + 4 -> $t11
	// LowerMemory: %18 -> [%3]
	$t11 -> [$t2]
	$t10 -> $t12
	// LowerMemory(load): [%19] -> %20
	[$t12] -> $t13 /h
	// LowerMemory: %20 -> [%6]
	$t13 -> [$t5] /h
	// LowerMemory(load): [%3] -> %21
	[$t2] -> $t14
	// LowerGetelementptr: struct-type
	$t14 + 4 -> $t15
	// LowerMemory: %22 -> [%3]
	$t15 -> [$t2]
	$t14 -> $t16
	// LowerMemory(load): [%23] -> %24
	[$t16] -> $s0 /h
	// LowerMemory: %24 -> [%7]
	$s0 -> [$t6] /h
	$t2 -> $s1
	// LowerMemory(load): [%4] -> %26
	[$t3] -> $s2
	[ $a0
	$s2 -> $a0
	[ $m2
	:: strprint
	] $m2
	] $a0
	[ $a0
	10 -> $a0
	[ $m2
	:: prc
	] $m2
	] $a0
	// LowerMemory(load): [%5] -> %27
	[$t4] -> $s3 /h
	[ $a0
	$s3 -> $a0
	[ $m2
	:: prd
	] $m2
	] $a0
	[ $a0
	10 -> $a0
	[ $m2
	:: prc
	] $m2
	] $a0
	// LowerMemory(load): [%6] -> %28
	[$t5] -> $s4 /h
	[ $a0
	$s4 -> $a0
	[ $m2
	:: prd
	] $m2
	] $a0
	[ $a0
	10 -> $a0
	[ $m2
	:: prc
	] $m2
	] $a0
	// LowerMemory(load): [%7] -> %29
	[$t6] -> $s5 /h
	[ $a0
	$s5 -> $a0
	[ $m2
	:: prd
	] $m2
	] $a0
	[ $a0
	10 -> $a0
	[ $m2
	:: prc
	] $m2
	] $a0
	$fp -> $sp
	] $s5
	] $s4
	] $s3
	] $s2
	] $s1
	] $s0
	] $t16
	] $t15
	] $t14
	] $t13
	] $t12
	] $t11
	] $t10
	] $tf
	] $te
	] $td
	] $tc
	] $tb
	] $ta
	] $t9
	] $t8
	] $t7
	] $t6
	] $t5
	] $t4
	] $t3
	] $t2
	] $t1
	] $t0
	] $fp
	] $rt
	: $rt
}

sub prd() {
	<prd $a0>
}

sub prc() {
	<prc $a0>
}

sub strprint() {
	// $a0: pointer to string to print
	// $ma: character to print (temporary hack to protect the stack)

	@_strprint_loop
		[$a0] -> $ma /b
		: _strprint_print if $ma
		!done
		@_strprint_print
		<prc $ma>
		$a0++
		: _strprint_loop
}
//     foo(4, "bar", 3, -1, 10)
// 999908: |  |      |  |   ^
// 999904: |  |      |  ^
// 999900: |  |      ^
// 999892: |  ^ =2576
// 999888: ^

// [999888] (4)         stored into [999640]
// Stack pointer        stored into [999632]
// [999632] (999888)    loaded into $t8
// $t8 + 4  (999892)    stored into [999632]
// [$t8 (999888)] (big) loaded into $tb
// $tb (big)            stored into [999624]
// [999632] (999892)    loaded into $tc
// $tc + 4 (999896)     stored into [999632]
// [999892]/h (2576)    loaded into $tf
// 2576                 stored into [999616]/h
// [999632] (999896)    loaded into $t10
// $t10 + 4 (999900)    stored into [999632]
// [999896]/h (0)       loaded into $t13
// $t13 (0)             stored into [999608]/h
// [999632] (999900)    loaded into $t14
// $t14 + 4 (999904)    stored into [999632]
// [999900]/h (3)       loaded into $s0
// $s0 (3)              stored into [999600]/h
// [999624] (big)       loaded into $s2 -> $a0
