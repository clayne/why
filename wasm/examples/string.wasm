#meta
name: "Strings"
author: "Kai Tamkun"
orcid: "0000-0001-7405-6654"
version: "2"
library

#data
s_true: "true"
s_false: "false"

#code

<halt>

sub strlen() {
	0 -> $r0
	@_strlen_loop
		[$a0] -> $t0 /b
		: _strlen_next if $t0
		done
		@_strlen_next
			$a0++
			$r0++
			: _strlen_loop
}

sub strcat($s0, $s1) {
	// $a0: address of destination string
	// $a1: address of source string
	// $s0: contains pointer to destination string
	// $s1: contains pointer to source string
	// $t0: temporary storage for characters

	$a0 -> $s0
	$a1 -> $s1
	strlen($a0)
	$s0 += $r0
	@_strcat_loop
		[$s1] -> $t0 /b
		: _strcat_next if $t0
		done
		@_strcat_next
			$t0 -> [$s0] /b
			$s0++
			$s1++
			: _strcat_loop
}

sub strchr() {
	// $a0: pointer to string to search
	// $a1: character to search for
	// $r0: pointer to the first instance of the character if found; 0 otherwise
	// $r1: 1 if a character was found; 0 otherwise
	// $t0: temporary storage

	@_strchr_loop
		[$a0] -> $t0 /b
		: _strchr_nonzero if $t0
		: _strchr_failed
		@_strchr_nonzero
		: _strchr_found if $t0 == $a1
		$a0++
	: _strchr_loop

	@_strchr_found
		$a0 -> $r0
		1 -> $r1
		done
	@_strchr_failed
		0 -> $r0
		0 -> $r1
		done
}

sub strprint($s0) {
	// $a0: pointer to string to print
	// $s0: character to print

	@_strprint_loop
		[$a0] -> $s0 /b
		: _strprint_print if $s0
		done
		@_strprint_print
		<prc $s0>
		$a0++
		: _strprint_loop
}

sub strcmp() {
	// $a0: pointer to first string
	// $a1: pointer to second string

	@_strcmp_loop
		[$a0] -> $t0 /b
		[$a1] -> $t1 /b
		$t0 == $t1 -> $t2
		//!$t2.
		//: @_strcmp_compare
}

sub strcpy() {
	// $a0: pointer to source string
	// $a1: pointer to destination
	// $t0: temporary storage

	@_strcpy_loop
		[$a0] -> $t0 /b
		: _strcpy_copy if $t0
		done
		@_strcpy_copy
		$t0 -> [$a1] /b
		$a0++
		$a1++
		: _strcpy_loop
}

sub bprint() {
	: _bprint_true if $a0
		<prs "false">
		ret
	@_bprint_true
		<prs "true">
}

sub newline() {
	'\n' -> $t0
	<prc $t0>
}
