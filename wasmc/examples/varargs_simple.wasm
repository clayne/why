#meta
name: "varargs_simple.c"

#data
.str.2: "%s\x00"
.str.1: "%c\x00"
.str.3: "bar\x00"
.str: "%lu\x00"

#code

:: main
<halt>

sub main() {
	@__main_label2
	[ $rt
	[ $fp
	[ $t0
	[ $t1
	[ $t2
	[ $t3
	[ $t4
	[ $t5
	[ $t6
	[ $t7
	[ $t8
	$sp -> $fp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t0
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t1
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerMemory: %0 -> [%3]
	$a0 -> [$t0] /h
	// LowerMemory: %1 -> [%4]
	$a1 -> [$t1]
	666 -> $t2
	[:8 $t2
	35 -> $t3
	[:8 $t3
	36 -> $t4
	[:8 $t4
	-1 -> $t5
	[:8 $t5
	3 -> $t6
	[:8 $t6
	&.str.3 -> $t7
	[:8 $t7
	5 -> $t8
	[:8 $t8
	:: foo
	] $a1
	] $a0
	$fp -> $sp
	0 -> $r0
	] $t8
	] $t7
	] $t6
	] $t5
	] $t4
	] $t3
	] $t2
	] $t1
	] $t0
	] $fp
	] $rt
	: $rt
}

sub foo() {
	@__foo_label1
	$sp + 8 -> $m2
	[ $rt
	[ $fp
	[ $t0
	[ $t1
	[ $t2
	[ $t3
	[ $t4
	[ $t5
	[ $t6
	[ $t7
	[ $t8
	[ $t9
	[ $ta
	[ $tb
	[ $tc
	[ $td
	[ $te
	[ $tf
	[ $t10
	[ $t11
	[ $t12
	[ $t13
	[ $t14
	[ $t15
	[ $t16
	[ $s0
	[ $s1
	[ $s2
	[ $s3
	[ $s4
	[ $s5
	[ $s6
	[ $s7
	[ $s8
	[ $s9
	[ $sa
	[ $sb
	[ $sc
	[ $sd
	[ $se
	[ $sf
	[ $s10
	[ $s11
	[ $s12
	[ $s13
	[ $s14
	[ $s15
	$sp -> $fp
	// LoadArguments: $sp + to_skip -> %temp
	// Increased by 376 bytes
	$sp + 376 -> $m0
	// LoadArguments: [%temp] -> %var
	[$m0] -> $t0 /h
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t1
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t2
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t3
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t4
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t5
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t6
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t7
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t8
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerAlloca: align stack pointer
	$sp % 8 -> $m0
	$sp - $m0 -> $sp
	$sp -> $t9
	// LowerAlloca: $sp -= to_sub
	$sp - 8 -> $sp
	// LowerMemory: %0 -> [%2]
	$t0 -> [$t1] /h
	$t2 -> $ta
	// llvm.va_start removed.
	$m2 -> [$ta]
	// LowerMemory(load): [%3] -> %12
	[$t2] -> $tb
	// LowerGetelementptr: struct-type
	$tb + 8 -> $tc
	// LowerMemory: %13 -> [%3]
	$tc -> [$t2]
	$tb -> $td
	// LowerMemory(load): [%14] -> %15
	[$td] -> $te
	// LowerMemory: %15 -> [%4]
	$te -> [$t3]
	// LowerMemory(load): [%3] -> %16
	[$t2] -> $tf
	// LowerGetelementptr: struct-type
	$tf + 8 -> $t10
	// LowerMemory: %17 -> [%3]
	$t10 -> [$t2]
	$tf -> $t11
	// LowerMemory(load): [%18] -> %19
	[$t11] -> $t12
	// LowerTrunc: 64 to 32, apply mask
	$t12 & -1 -> $t13
	// LowerMemory: %20 -> [%6]
	$t13 -> [$t5] /h
	// LowerMemory(load): [%6] -> %21
	[$t5] -> $t14 /h
	// LowerMemory: %21 -> [%5]
	$t14 -> [$t4] /h
	// LowerMemory(load): [%3] -> %22
	[$t2] -> $t15
	// LowerGetelementptr: struct-type
	$t15 + 8 -> $t16
	// LowerMemory: %23 -> [%3]
	$t16 -> [$t2]
	$t15 -> $s0
	// LowerMemory(load): [%24] -> %25
	[$s0] -> $s1
	// LowerMemory: %25 -> [%7]
	$s1 -> [$t6]
	// LowerMemory(load): [%3] -> %26
	[$t2] -> $s2
	// LowerGetelementptr: struct-type
	$s2 + 8 -> $s3
	// LowerMemory: %27 -> [%3]
	$s3 -> [$t2]
	$s2 -> $s4
	// LowerMemory(load): [%28] -> %29
	[$s4] -> $s5
	// LowerTrunc: 64 to 32, apply mask
	$s5 & -1 -> $s6
	// LowerMemory: %30 -> [%9]
	$s6 -> [$t8] /h
	// LowerMemory(load): [%9] -> %31
	[$t8] -> $s7 /h
	// LowerTrunc: 32 to 8, apply mask
	$s7 & 255 -> $s8
	// LowerMemory: %32 -> [%8]
	$s8 -> [$t7] /b
	// LowerMemory(load): [%3] -> %33
	[$t2] -> $s9
	// LowerGetelementptr: struct-type
	$s9 + 8 -> $sa
	// LowerMemory: %34 -> [%3]
	$sa -> [$t2]
	$s9 -> $sb
	// LowerMemory(load): [%35] -> %36
	[$sb] -> $sc
	// LowerTrunc: 64 to 32, apply mask
	$sc & -1 -> $sd
	// LowerMemory: %37 -> [%10]
	$sd -> [$t9] /h
	$t2 -> $se
	// LowerMemory(load): [%4] -> %39
	[$t3] -> $sf
	[ $a0
	$sf -> $a0
	[ $m2
	:: strprint
	] $m2
	] $a0
	[ $a0
	10 -> $a0
	[ $m2
	:: prc
	] $m2
	] $a0
	// LowerMemory(load): [%5] -> %40
	[$t4] -> $s10 /h
	1 -> $m0
	$m0 << 31 -> $m0
	$s10 x $m0 -> $s11
	$s11 - $m0 -> $s11
	[ $a0
	$s11 -> $a0
	[ $m2
	:: prd
	] $m2
	] $a0
	[ $a0
	10 -> $a0
	[ $m2
	:: prc
	] $m2
	] $a0
	// LowerMemory(load): [%7] -> %42
	[$t6] -> $s12
	[ $a0
	$s12 -> $a0
	[ $m2
	:: prd
	] $m2
	] $a0
	[ $a0
	10 -> $a0
	[ $m2
	:: prc
	] $m2
	] $a0
	// LowerMemory(load): [%8] -> %43
	[$t7] -> $s13 /b
	[ $a0
	$s13 -> $a0
	[ $m2
	:: prc
	] $m2
	] $a0
	[ $a0
	10 -> $a0
	[ $m2
	:: prc
	] $m2
	] $a0
	// LowerMemory(load): [%10] -> %44
	[$t9] -> $s14 /h
	$s14 -> $s15
	[ $a0
	$s15 -> $a0
	[ $m2
	:: prd
	] $m2
	] $a0
	[ $a0
	10 -> $a0
	[ $m2
	:: prc
	] $m2
	] $a0
	$fp -> $sp
	] $s15
	] $s14
	] $s13
	] $s12
	] $s11
	] $s10
	] $sf
	] $se
	] $sd
	] $sc
	] $sb
	] $sa
	] $s9
	] $s8
	] $s7
	] $s6
	] $s5
	] $s4
	] $s3
	] $s2
	] $s1
	] $s0
	] $t16
	] $t15
	] $t14
	] $t13
	] $t12
	] $t11
	] $t10
	] $tf
	] $te
	] $td
	] $tc
	] $tb
	] $ta
	] $t9
	] $t8
	] $t7
	] $t6
	] $t5
	] $t4
	] $t3
	] $t2
	] $t1
	] $t0
	] $fp
	] $rt
	: $rt
}

sub prd() {
	<print $a0>
	<prd $a0>
}

sub prc() {
	$a0 -> $m7
	<print $m7>
	<prc $a0>
}

sub strprint() {
	// $a0: pointer to string to print
	// $ma: character to print (temporary hack to protect the stack)

	@_strprint_loop
		[$a0] -> $ma /b
		: _strprint_print if $ma
		!done
		@_strprint_print
		<prc $ma>
		$a0++
		: _strprint_loop
}
